version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/tmp/logs
    env_file:
      - .env
    environment:
      - LOGS_DIR=/tmp/logs
    depends_on:
      - db
      - redis
    networks:
      - llm_network

  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - llm_network

  bot:
    build: .
    command: python app/run_bot.py
    volumes:
      - .:/app
      - ./logs:/tmp/logs
    env_file:
      - .env
    environment:
      - LOGS_DIR=/tmp/logs
    depends_on:
      - db
      - redis
    networks:
      - llm_network

  vllm:
    image: vllm/vllm-openai:latest
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
    ports:
      - "8001:8001"
    ipc: host
    command: --model Qwen/Qwen2.5-0.5B-Instruct --port 8001
    networks:
      - llm_network

  vllm_worker:
    build: .
    command: python app/vllm_worker.py
    volumes:
      - .:/app
      - ./logs:/tmp/logs
    env_file:
      - .env
    environment:
      - LOGS_DIR=/tmp/logs
    depends_on:
      - redis
      - vllm
    networks:
      - llm_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - llm_network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - llm_network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
    depends_on:
      - prometheus
    networks:
      - llm_network

networks:
  llm_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 